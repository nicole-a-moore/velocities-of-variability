#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-node.llnl.gov - 2022/01/19 07:53:57
# Search URL: https://esgf-node.llnl.gov/esg-search/wget/?distrib=false&dataset_id=cmip5.output1.MPI-M.MPI-ESM-MR.historical.day.ocean.day.r1i1p1.v20120503|aims3.llnl.gov
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='https://esgf-node.llnl.gov/esg-search/wget/?distrib=false&dataset_id=cmip5.output1.MPI-M.MPI-ESM-MR.historical.day.ocean.day.r1i1p1.v20120503|aims3.llnl.gov'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'tos_day_MPI-ESM-MR_historical_r1i1p1_18500101-18501231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18500101-18501231.nc' 'SHA256' 'dcf0f04b73c511a196a7b8c82e9fdde1984a9099e260f3f5dbb00529e2431539'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18510101-18511231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18510101-18511231.nc' 'SHA256' '514e7351a8d18586ab23039163d84153374f5b50e7d8d736c7727b340998c1ea'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18520101-18521231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18520101-18521231.nc' 'SHA256' 'ba7a6828920afea4eea4afa43e005d8bbbb3d5eb62c051a34ad8e6608becd53e'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18530101-18531231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18530101-18531231.nc' 'SHA256' 'f0107da644ad315a64b6d19812f2483539777684384119815377b568a21eab07'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18540101-18541231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18540101-18541231.nc' 'SHA256' 'c1d7b7b5f629025b7da7e638854ea275702140e1f924055eb032a8bcd0b130a9'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18550101-18551231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18550101-18551231.nc' 'SHA256' 'e5391628b7fe0ffcb48cdf00a3d2244849ec169ce4f8547fd8de2c5be8332dab'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18560101-18561231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18560101-18561231.nc' 'SHA256' 'e91759adfa3e5d1206e8a576a0efaa8e90b42bbb5e92f10dfeb65b99ae9c0bb2'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18570101-18571231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18570101-18571231.nc' 'SHA256' 'fc3edf11b8a6a8a02e784d71364b2894f085c9aa86cd2f43fdcc7aa287579272'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18580101-18581231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18580101-18581231.nc' 'SHA256' '9a8899e2341cf220550b20eadd604aff0f249f0689ebf6aa571964e3a161efca'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18590101-18591231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18590101-18591231.nc' 'SHA256' 'c2261daa25e552e77269aa36a6f9320aa0e7c01770e4af9060e91c3947f4d1f7'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18600101-18601231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18600101-18601231.nc' 'SHA256' '7521a7a304818ae3be4211e2530378615b15eb1fb0290074df73e32484c11bbf'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18610101-18611231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18610101-18611231.nc' 'SHA256' 'd5ac1e5418a6767dc00ca93a21ea346837a4590029758af83215b91dd6fb113e'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18620101-18621231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18620101-18621231.nc' 'SHA256' 'f638311dd993ac59563ff89510010e12f36c017710573f0a6a2d65b2374cca46'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18630101-18631231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18630101-18631231.nc' 'SHA256' '47bdf484ad20204a32a3cb05de0a6ae9f749a90dc7caa8843e66449817bb74b4'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18640101-18641231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18640101-18641231.nc' 'SHA256' '418c3c4d3913e089b6a8b37c966d08d929fa83337a5c73ab3a57d74eb7d9c9c2'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18650101-18651231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18650101-18651231.nc' 'SHA256' '653b0fa757b343cf3225ab67045d6057f3b06ed8dc249822a51cb16642fe07f6'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18660101-18661231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18660101-18661231.nc' 'SHA256' '9c74c4df2a1f4dc4bdbe12720e4ef876922eec2b24cd694f994f0f7568b98ff6'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18670101-18671231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18670101-18671231.nc' 'SHA256' '1b2498872f246fc5f50a6e1135f9498760ef9c9d699cc94d4c9becadd570399d'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18680101-18681231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18680101-18681231.nc' 'SHA256' 'bd294b7f87cb27066008a09c737b0a5917825c2ca7175f53bdd21da8b27d93cf'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18690101-18691231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18690101-18691231.nc' 'SHA256' '097888aa284ff88f6f3720d3f6bf8b16101f588fb1e9ec8924781d98d3fc3b26'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18700101-18701231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18700101-18701231.nc' 'SHA256' '6a95897ab4c73328c49495974d2b442171a1c72af2af738dd12afedc5c71dbe7'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18710101-18711231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18710101-18711231.nc' 'SHA256' '8849e820b6c361fbaedf3cad05d40052295c46deb6e9f9d6b3157477c1996d6a'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18720101-18721231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18720101-18721231.nc' 'SHA256' '63ea74e90ee01383ff219f3543474e093f767d123ebc708205ce9bb6edc59f47'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18730101-18731231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18730101-18731231.nc' 'SHA256' '1d1b8cb43597789deef286f035ad802332ec47fc50e4b9ef240f8261583b30df'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18740101-18741231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18740101-18741231.nc' 'SHA256' 'b490094ad781eefbe5fef6ab88105a8fc1c37a14ab8585ef437f527eac4af72e'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18750101-18751231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18750101-18751231.nc' 'SHA256' 'f7cb7b0f877a8f2ab02f44c35951cf5f9be8074c020cfab763f45260f876badd'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18760101-18761231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18760101-18761231.nc' 'SHA256' 'b6612ee8d197d7837b9059c5d784df5de0843ab74375c3b49486d689b8d64e84'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18770101-18771231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18770101-18771231.nc' 'SHA256' '60218aae8bd89107dc0c389208bbd3e388b4042261e8b00869845cb16592a762'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18780101-18781231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18780101-18781231.nc' 'SHA256' '581f7909aae896770c844a983c1ec1ad2ea6976ff34c42f8e91fd4b88b7baaba'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18790101-18791231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18790101-18791231.nc' 'SHA256' 'a063d2399689b25b6916a0f45c5b82def5c2efbb973124b0fc1b8a6a42a99d80'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18800101-18801231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18800101-18801231.nc' 'SHA256' 'df164aed002ef49bdfc9f08b0e52ef6d8bd18b1ae8e97e064f4ed88b9416ff9b'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18810101-18811231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18810101-18811231.nc' 'SHA256' 'aec338a73489e2a0fbd4ece51eba471e44ea5b030fa52805aad10ac6c35e1f76'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18820101-18821231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18820101-18821231.nc' 'SHA256' '2468644a540f846877ece21473bcdbb256d0f6fc961dd33be6f50d0f33ad36ea'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18830101-18831231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18830101-18831231.nc' 'SHA256' 'b7f03e1181ac3ef07e7dd97f7f1702051f3802d51f75dfc3fc53c6ed4ae1cfc4'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18840101-18841231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18840101-18841231.nc' 'SHA256' 'dc71648fbad4432fd93c4ba9d56f5e4f1e6408a699af33409d438a7b1ca4d2e7'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18850101-18851231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18850101-18851231.nc' 'SHA256' '70a9833c824cdc5592e8ecf2b61bd97b8e0134447ab04567e9987012ee651ff7'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18860101-18861231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18860101-18861231.nc' 'SHA256' 'fd1ca8dc2f664cea7f50fd6df2809c514056de0a77a1b1303264d85d77a2b5b0'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18870101-18871231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18870101-18871231.nc' 'SHA256' 'dc8b527d3a74bb78ffdb76bda16c424ba7afe2bc31959621ae8d963cbdf7ffe8'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18880101-18881231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18880101-18881231.nc' 'SHA256' '3e1613f400ad93a159c48eca4892d10da591db64e3634fb11cabbc2b51c96453'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18890101-18891231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18890101-18891231.nc' 'SHA256' '9a90d986f0c0ff2ea0ca1151c99598c7e03496beefc8bcb6985465206cfbdcb4'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18900101-18901231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18900101-18901231.nc' 'SHA256' 'cd58bbd8a27cdfd0661a147c4eb4aab457de5c955167b7667f21a780942b91b0'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18910101-18911231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18910101-18911231.nc' 'SHA256' 'c4ce0a4e994b0b3ebaa676ae0dc0d19ef61ce436cfdf9e78b905b6063fc6abfd'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18920101-18921231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18920101-18921231.nc' 'SHA256' 'b0f279aa8b831e329d6248bbd3d86de67cacd0523f0f1d7232454a8856951f09'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18930101-18931231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18930101-18931231.nc' 'SHA256' '0c5fa915b7d4a78d3fa3eabcb2dac4cb3e3730a04bd6d9328654fdeff437f58c'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18940101-18941231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18940101-18941231.nc' 'SHA256' 'e48d39fc9478632e5c1409bab212d40f70c91589369dd67ba5c88ff7a29c484c'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18950101-18951231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18950101-18951231.nc' 'SHA256' '2e2ddd462d2bdc2a904dc59c714fd0403b23bbaff8e4fba68fb6ab5659e91e34'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18960101-18961231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18960101-18961231.nc' 'SHA256' 'e2d29d43fed84a701fde164114e31a9d76d54db2592a806aa13e2d2493cadb43'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18970101-18971231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18970101-18971231.nc' 'SHA256' 'e69d0a490de40fa4331271d5c46e6d41791206267533ef889c1e2c68d49e6cb3'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18980101-18981231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18980101-18981231.nc' 'SHA256' '5c7e205d8e378d4c1adad49185601804b4caaba8faf214ebf040009011998767'
'tos_day_MPI-ESM-MR_historical_r1i1p1_18990101-18991231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_18990101-18991231.nc' 'SHA256' 'bdbf293fd9cdd661a32acded48e1db8dac9ad31ee54623bf178a378d779b8ccc'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19000101-19001231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19000101-19001231.nc' 'SHA256' 'efe13c07243a9ac8fe193e19cab7f2e9d352e8f491713ac78e0c8ac8aad035d5'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19010101-19011231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19010101-19011231.nc' 'SHA256' '9169dd3f38b0fdac24c5b09557cba7fa44506f14291225671abeb010afc40d8e'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19020101-19021231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19020101-19021231.nc' 'SHA256' '145dd4bf91473168f0b174f3b4bbeffcc909c9b5a9ff78c359ce65be81a976bf'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19030101-19031231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19030101-19031231.nc' 'SHA256' '5755b0b7f8a3e0e9fe4f4b0128186124cf04855e52a5dec925060d45fdb899b5'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19040101-19041231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19040101-19041231.nc' 'SHA256' 'dddbbb374d4cd0acfdc982373e8077059836b5a0bf6546a3c7054922cafa79e5'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19050101-19051231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19050101-19051231.nc' 'SHA256' '622f7f329e7555b0daa88d99a2d615075d943d5348cc639aaf6916704051e53e'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19060101-19061231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19060101-19061231.nc' 'SHA256' '1bcb3cde1679c75b8ee2661fa7764c8b65a85114850143591f0e9290b73b6396'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19070101-19071231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19070101-19071231.nc' 'SHA256' '0c0a42463fa42bebc7f8f74939c41d80e3fae3851df5632232896b6345a96639'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19080101-19081231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19080101-19081231.nc' 'SHA256' '0d09f9376f0966e5727799836b82f382cd26ae09845d58fa28bcd17fe1013e6b'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19090101-19091231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19090101-19091231.nc' 'SHA256' '6042ed939c58e2dba1bbd75e331e99eec9030bd0ff71d83238452235f12e3a07'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19100101-19101231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19100101-19101231.nc' 'SHA256' '40bdf061424dd87cde0bdb70e3a4ade38a34c84c0716b6195345d3734faa42c2'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19110101-19111231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19110101-19111231.nc' 'SHA256' 'a658ed9216e8c7a6adff6385e00d711e0ba7d39ff05e2441ff09a43eba5e9221'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19120101-19121231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19120101-19121231.nc' 'SHA256' '00150ab1e8f5d693e5a2cc2e8cbea5ed3f62fd51c31099cf971170cf5fdd8106'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19130101-19131231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19130101-19131231.nc' 'SHA256' '2d83bab0b2b2fd30ed10f7675049fce76b39f47f8acd110a9ec907317b96e733'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19140101-19141231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19140101-19141231.nc' 'SHA256' 'd7b0ceb5020cb7eb84b542bf0f2f0aec2f482fdbffe5647cdd25cc2cfa9c02d9'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19150101-19151231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19150101-19151231.nc' 'SHA256' '3d8cea30f58ee938c32e09de9f8587cf236d92911b3eee0c352b66153ca1632f'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19160101-19161231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19160101-19161231.nc' 'SHA256' '69aa727b84f9d61dce04766b5993f6c2147e10aecf8a6e905d8147adea3fd13d'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19170101-19171231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19170101-19171231.nc' 'SHA256' '32abf668798a9ffe34472f216a45128021d5a8ab7d43680e30123221283d1b4e'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19180101-19181231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19180101-19181231.nc' 'SHA256' 'bbc123674f52bc21b3bde6d0393fb05eb2f5d0a717f53a012e456ed41d6d4aeb'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19190101-19191231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19190101-19191231.nc' 'SHA256' 'f030d8c7c1ba1d6de8df658a14c34ed03b85d943f14db239be076c5299425d22'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19200101-19201231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19200101-19201231.nc' 'SHA256' '7061affe327614ba994395ed2a29278438f8232d82a66fd68d59b05a782505a4'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19210101-19211231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19210101-19211231.nc' 'SHA256' 'b7e6621404354286bf6e557b162906faf9a8b3fc341a83761b7e61430dd08081'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19220101-19221231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19220101-19221231.nc' 'SHA256' '0815b18a03e7680f284bc8b7967d9606b1cb1a3c2debdd47924a2997f2ef40e5'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19230101-19231231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19230101-19231231.nc' 'SHA256' 'ec6e054e2899e60122b8f30b8518745393eff2201ebaa5babb77ffc56083433c'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19240101-19241231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19240101-19241231.nc' 'SHA256' 'b954bc2273a78a41cd9a67e0fe508db24f3eef9ab4546a4a6e42e07564504521'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19250101-19251231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19250101-19251231.nc' 'SHA256' 'a0aa64206b743004b5952ab2a135143ab2068156cc95f044ab22e0524573cdbd'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19260101-19261231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19260101-19261231.nc' 'SHA256' 'dd015884fa9dde2b8c9530f0612891a756e78bec7b16211fb3a9e98204112818'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19270101-19271231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19270101-19271231.nc' 'SHA256' 'e6c5ad7707cf619a28b8b10b131398b286dd1bc1252e7b78d4ab089d556cb22a'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19280101-19281231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19280101-19281231.nc' 'SHA256' '72db2b8eedf69d2028ab5f84e891e9bf0fedecda7a6163916ae0573feb37cd11'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19290101-19291231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19290101-19291231.nc' 'SHA256' 'e7525ac8d81e4db3a2b94c298087ffc6f780e9e49637afcfe9ec967e88f96f97'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19300101-19301231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19300101-19301231.nc' 'SHA256' '3732b0f7ba67fb465561d9ae9136b3045a86f6317b109101ef123aacfaac701f'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19310101-19311231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19310101-19311231.nc' 'SHA256' '351de2cc0e9f4ab7485ed61c136ba513bcdd086f690b0e5b7d7e8e601fc9054b'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19320101-19321231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19320101-19321231.nc' 'SHA256' 'dbc3547179e0d66d47cd7518c184b1cd1425f6904157623b212bda9c7375b3b8'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19330101-19331231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19330101-19331231.nc' 'SHA256' 'f3b37c2c3231e716f575b0b11a4d6cfe977ca4058c1c8f565b5498513fbe5c99'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19340101-19341231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19340101-19341231.nc' 'SHA256' 'a31309100f8f0ebd52372be71a5b76c84463a28b3166026dd0e28a3ea0f5723a'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19350101-19351231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19350101-19351231.nc' 'SHA256' '1f7cefb2c880431814bd339fae838ed090ae681886f87ec78ac594f885c7cd14'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19360101-19361231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19360101-19361231.nc' 'SHA256' 'be9f275f59139615f253f2d362c3ff5696216d007efcbac8b60651566ee820eb'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19370101-19371231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19370101-19371231.nc' 'SHA256' 'd3b0eaef4d3c9e6db528a6e6c0a444f0d7b059e8ae3e972affe73003f08df8e0'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19380101-19381231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19380101-19381231.nc' 'SHA256' 'c5a5da309835432b5d95528b16a1f06398c067e75e953829a36881cf9e166076'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19390101-19391231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19390101-19391231.nc' 'SHA256' 'afa0529142318728082c0e56b787ded56507308396454459df202b0448e5f992'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19400101-19401231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19400101-19401231.nc' 'SHA256' 'f8ee9d0a5347fb78db4d42da16d01f3d8db8b745abee3adca0813b9c3f3cd442'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19410101-19411231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19410101-19411231.nc' 'SHA256' 'bcf14eb02152797260d052b6b4c67a4a5736a0f32f39e5f29b00f94108659ad4'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19420101-19421231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19420101-19421231.nc' 'SHA256' 'd1c97d4c10b8c77f2bee3e6c722467f30956d246ad7a6d7d29781be6e88c1f66'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19430101-19431231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19430101-19431231.nc' 'SHA256' '644933925ea6a1591f3a3d852d1b434f846698ed40aad5fbe38a559fc767b209'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19440101-19441231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19440101-19441231.nc' 'SHA256' 'a93c2fb2bb16ad4f8a3f08b52b871b82e521212760f6b62c3f571204a882aa79'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19450101-19451231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19450101-19451231.nc' 'SHA256' 'e542f1b4fd4b24d0bb3bbbdd229bc99f55a919f98f52b5c63c4026144d6fc71d'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19460101-19461231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19460101-19461231.nc' 'SHA256' 'bd2f68affe7ec2920993142725af2d4ca0b8c9a9cc49d3d2b499cf1a8dac3f12'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19470101-19471231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19470101-19471231.nc' 'SHA256' '2f857ba08fac819c3ee194f1bd616ec2368ac812b9fd5d1cb94991013a320eca'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19480101-19481231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19480101-19481231.nc' 'SHA256' 'c175a989bb1d7ab413ac40f565c95d17c9209f9d538080a92e48958d6782fb4c'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19490101-19491231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19490101-19491231.nc' 'SHA256' '7b6a35c4676aea84bf1d812fa420e75ba0162e04fdb731a8fca8c71efaa0ea52'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19500101-19501231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19500101-19501231.nc' 'SHA256' '212c98deaeb6a77c7f0f6f23a739d1c79004f059a281a2ece238241b056b4230'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19510101-19511231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19510101-19511231.nc' 'SHA256' '037646bb877c310f6163415e88a9b4b70f0867b5eef7273a6337a45a3eea24a0'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19520101-19521231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19520101-19521231.nc' 'SHA256' '12fed219233c0a66e09dc43f36c61e897e19808f8a3c0905ea258246a753ab98'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19530101-19531231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19530101-19531231.nc' 'SHA256' 'b012e8ce14f927234b626f9e430a0436b84eaa4b69bb0c327b16d3e937dd4ffd'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19540101-19541231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19540101-19541231.nc' 'SHA256' 'e6435cabb4e8fe455a2b754edeec3d0dc7022b925012c15a43bb5ca00e403a2a'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19550101-19551231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19550101-19551231.nc' 'SHA256' 'd8c90ce6ec1f332cdcb202905aa4884bb4cc7b024ee96e7a67645818fdf5dc9f'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19560101-19561231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19560101-19561231.nc' 'SHA256' '8e0b87dab236785ac93ab683b5299432ba932e9c7580632771e28ec02cc9f21f'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19570101-19571231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19570101-19571231.nc' 'SHA256' '47421f5d78f3e85cf02e9dd1fd1ce40c699f04a8b379df9425ca360a498a6b34'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19580101-19581231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19580101-19581231.nc' 'SHA256' '7a6ab33997ab8a20048c438fb1f2991a6057cb47626737299d7168ce3d73bd5f'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19590101-19591231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19590101-19591231.nc' 'SHA256' '9008e2eef961769b28eb908f1628622c6b06fb19acb26a53022bb7476e73da83'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19600101-19601231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19600101-19601231.nc' 'SHA256' '099c7e5020146b363b41003cab59821b60acc1a4fc13b73dae6036cb885b2413'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19610101-19611231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19610101-19611231.nc' 'SHA256' 'f51e39f7caf2a0c3a19e02f4024df8b7ba394dfb400b87bd34a9caef2cff1324'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19620101-19621231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19620101-19621231.nc' 'SHA256' '152ce2ec3bc0aa53657b4a62cb1b03f6de0b20e8d0bd38e8878d26560128d34f'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19630101-19631231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19630101-19631231.nc' 'SHA256' '58f4cd5663ca144dd89a52654faba6fc99d627e6dc96eef48c338bcd643f9744'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19640101-19641231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19640101-19641231.nc' 'SHA256' 'cff4fa946469b3237fde5f8afc764d2382256fa69b67643ac8989145abbbfe20'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19650101-19651231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19650101-19651231.nc' 'SHA256' '643f8aa5c0ece55db24e94c0da3de6627bf2fa4814e6fdc4dd607ea99b4e4c7d'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19660101-19661231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19660101-19661231.nc' 'SHA256' '34ffb2f61eed5c3f3c1229080226a9842be6b8fa6b267d25d363d2228d11cfb0'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19670101-19671231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19670101-19671231.nc' 'SHA256' '28321e298b3dc616e025e53fbdf14f61db407cdd9a6341bf2ebc4665499a4a06'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19680101-19681231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19680101-19681231.nc' 'SHA256' '1a139276c3f1ee355d4628f33dc08187f02e2ac218e30e25a1289b6905ea8f11'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19690101-19691231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19690101-19691231.nc' 'SHA256' '8dd0107d99c1f7da416c8ca54b7ea6872de612f1c4b776035c0f76a2c52ef63e'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19700101-19701231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19700101-19701231.nc' 'SHA256' 'c7fef74debad653b788f3f8ce6df32ba3dbe004dfdf0ad84b853d45767622816'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19710101-19711231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19710101-19711231.nc' 'SHA256' '69af4d6d90d148ef2a6e956e68d73730c5368365e9cc6281ec93a643d78f38e1'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19720101-19721231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19720101-19721231.nc' 'SHA256' '4e37c520406ed6b12de295728cbeff19ca011c978e38aec98698546ae7b4abaf'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19730101-19731231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19730101-19731231.nc' 'SHA256' 'f3c68fd161676bb0d09adffde7e60d247a166ed9d71843f93e0db83de74dc4e4'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19740101-19741231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19740101-19741231.nc' 'SHA256' '9ac7231e75346c5a95addcc3b173b7376b1a9dc6007e06063ccd3ad567fefae4'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19750101-19751231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19750101-19751231.nc' 'SHA256' '362f940eca5c5d5575d5e18d3b21a40085cd4c1db54639bf0aa7d06566fc4783'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19760101-19761231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19760101-19761231.nc' 'SHA256' 'dccc0a42a8943674cf0db649643cec8af23464a731875003ad2b26beae909d6e'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19770101-19771231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19770101-19771231.nc' 'SHA256' 'c8f1b5f4e4b63861c72a9964f0a36a25415c51bb6d91e2c43c169794903ec755'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19780101-19781231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19780101-19781231.nc' 'SHA256' '4f56eb440627120a30fdd5060b65d6b3d5360c8bf8108c212cca99c370d148a5'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19790101-19791231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19790101-19791231.nc' 'SHA256' 'f69c86ccf79e278c1d4aeaf2334efd649b4e399eccb3c62be85af3018c0e92cb'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19800101-19801231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19800101-19801231.nc' 'SHA256' '83d48a4a944b2a4dda7cae1786758450c41789bebd79e501126f4637ffa9ad5a'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19810101-19811231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19810101-19811231.nc' 'SHA256' '250b34218dbca3d1dbca8f27dd10ca1bcbdb6d64095e4d6e95c0a4cdd97b430e'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19820101-19821231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19820101-19821231.nc' 'SHA256' '2c36791e6da26a6394e17a7d1308ea43b6f24ea77e36290fe266de907bf74ebf'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19830101-19831231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19830101-19831231.nc' 'SHA256' '4d0e1c1b1e8ce1c11a4a791668fcc69992ae47c3fe50cca96ba8e24701cdb68e'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19840101-19841231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19840101-19841231.nc' 'SHA256' '841464709f3890adb33685cf6dca3543ebac7ae63e671259a20c3087443f3955'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19850101-19851231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19850101-19851231.nc' 'SHA256' '004e81d0160f1faee2da5f1e77e5d175002cf2e46d3c16cd3a4d96a758afab51'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19860101-19861231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19860101-19861231.nc' 'SHA256' 'eb0da14535a4bbacd3191e3db6e9bf489446e9c4ec72609cc73501b5d40cf9a5'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19870101-19871231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19870101-19871231.nc' 'SHA256' '0c3bfbc74e2e25e95de9874a608971564a918cc8efa149771fcdd408459897d7'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19880101-19881231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19880101-19881231.nc' 'SHA256' '30fce023bcb7f2e7aeec6eb02b41cd7e93fe9508de3f717dccc9644c38679709'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19890101-19891231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19890101-19891231.nc' 'SHA256' '4a50e624eef12c4202a754a6aa0208a3cf11f54de76b5a6d6ae4348c1710d148'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19900101-19901231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19900101-19901231.nc' 'SHA256' '2ddd0a5feb8ce4dd680371680c42d4cee487103c234756e6e9296b9b2af0baf5'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19910101-19911231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19910101-19911231.nc' 'SHA256' 'fb70457555f76c1db4da1e61387d1a0a3b81ccaf4cacf1d0ddab3208288a48b7'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19920101-19921231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19920101-19921231.nc' 'SHA256' '2eefab41539137cad1b2d8336c3b5ccd1792069683b0869eab4890463c373f8f'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19930101-19931231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19930101-19931231.nc' 'SHA256' '76c97e85861fdb9d4ed9db4bab5d9982f36af6b91af5b3103969b8a65fcae751'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19940101-19941231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19940101-19941231.nc' 'SHA256' '9ef0e7a4e2def2536b82400e0413b939227d08b8c17ef1fb2ee6c5fb5b7333df'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19950101-19951231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19950101-19951231.nc' 'SHA256' '4a0d3ec44630f717fb3c8431e0195bdbc2dfb3071fdd86ecf1e2c7f22a3fbcd8'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19960101-19961231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19960101-19961231.nc' 'SHA256' '120d9d1b783a7b4639d7ba711a6ec2751b196ed7eb31434029dec54c33ad20fc'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19970101-19971231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19970101-19971231.nc' 'SHA256' '475a8f38a69a5b8cc9c6e52fc2dee2bd004f07bf1747ebc2d1792215837a5cb7'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19980101-19981231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19980101-19981231.nc' 'SHA256' '9a514193d7539df8f618db23bdc7be052c41dfae81ae04c7b2a482e3ce92a76b'
'tos_day_MPI-ESM-MR_historical_r1i1p1_19990101-19991231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_19990101-19991231.nc' 'SHA256' 'ced672602b2e807143217f1a14729db54a09fc6767f19ba443498392f88b14bb'
'tos_day_MPI-ESM-MR_historical_r1i1p1_20000101-20001231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_20000101-20001231.nc' 'SHA256' 'f7b3ebbc2819bc7836d35d1084a8f1ba29c70166e4c43e60ca3a15fd26e703a7'
'tos_day_MPI-ESM-MR_historical_r1i1p1_20010101-20011231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_20010101-20011231.nc' 'SHA256' '4a273df828dd1716dc31f26de6e83aa1259d8a16319ea6287adc6c36ad093349'
'tos_day_MPI-ESM-MR_historical_r1i1p1_20020101-20021231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_20020101-20021231.nc' 'SHA256' '11cd5cd8cb979bdbb798194271518f0cbddf9669c183edae6f96c41cd471ca76'
'tos_day_MPI-ESM-MR_historical_r1i1p1_20030101-20031231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_20030101-20031231.nc' 'SHA256' 'e54cffbceb35ed055d183884df144d24291cf6000d91f7e5f63f302d4da84593'
'tos_day_MPI-ESM-MR_historical_r1i1p1_20040101-20041231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_20040101-20041231.nc' 'SHA256' '36aeb04522b70facefad9896c711a3f9ae07adbbc3738157c6e31ba67e70ebfe'
'tos_day_MPI-ESM-MR_historical_r1i1p1_20050101-20051231.nc' 'http://aims3.llnl.gov/thredds/fileServer/cmip5_css02_data/cmip5/output1/MPI-M/MPI-ESM-MR/historical/day/ocean/day/r1i1p1/tos/1/tos_day_MPI-ESM-MR_historical_r1i1p1_20050101-20051231.nc' 'SHA256' 'a99b656e5b3b55405eb4efd2df4ab351b20c6c758d9fcbe6928949b7e59baf0a'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 468 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
